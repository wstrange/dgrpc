
syntax = "proto3";

package dgrpc;
import "google/protobuf/timestamp.proto";
import "util.proto";

message Event {
    int32 event_id = 1;
    string description = 2;
    string title = 3;
    google.protobuf.Timestamp event_start_ts = 4;
    google.protobuf.Timestamp event_end_ts = 5;
    google.protobuf.Timestamp register_start_ts = 6;
    google.protobuf.Timestamp register_end_ts = 7;
    int32 max_participants = 8;
    int32 min_participants = 9;
    int32 created_by_id = 10;
    int32 section_id = 11; // The section the event belongs to
}

message EventLookupRequest {
    // the section to lookup events
    int32 section_id = 1;
    // Events between theses dates.
    google.protobuf.Timestamp from_ts = 2;
    google.protobuf.Timestamp to_ts = 3;
    // The id of the creator. 0 means any creator
    int32 createdByPersonId = 4;
    int32  eventId = 5; // If eventId is non zero, return only that specific event
}

message EventLookupResponse {
    dgrpc.Status  status = 1;
    repeated Event events = 2;
}

message EventCreateRequest {
    Event event = 1;
}

message EventCreateResponse {
    dgrpc.Status status = 1;
    int32 event_id = 2; // The id of the newly created event
}

message EventDeleteRequest {
    int32 event_id =1 ;
}

// Generic response
message StatusResponse {
    dgrpc.Status status = 1;
}

message PersonInfo {
    string email = 1;
    int32 id = 2;

}
message PersonLookupRequest {
    // array of persons to lookup
    repeated int32 personIds = 1;
}

message PersonLookupResponse {
    dgrpc.Status status = 1;
    repeated PersonInfo personInfos = 2;
}

service EventService {
    rpc GetEvents(EventLookupRequest) returns (EventLookupResponse);
    rpc CreateEvent(EventCreateRequest) returns (EventCreateResponse);
    rpc DeleteEvent(EventDeleteRequest) returns (StatusResponse);
    rpc PersonLookup(PersonLookupRequest) returns (PersonLookupResponse);
}